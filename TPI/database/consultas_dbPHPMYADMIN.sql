-- MySQL Script generated by MySQL Workbench
-- Fri Jun 11 16:51:41 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema consultas_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `consultas_db` ;

-- -----------------------------------------------------
-- Schema consultas_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `consultas_db` DEFAULT CHARACTER SET utf8 ;
USE `consultas_db` ;

-- -----------------------------------------------------
-- Table `consultas_db`.`estado_consulta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`estado_consulta` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`estado_consulta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigo` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `consultas_db`.`catedra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`catedra` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`catedra` (
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `jefe_catedra` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `consultas_db`.`materia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`materia` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`materia` (
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `delete_time` TIMESTAMP NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(32) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  `catedra_id` INT NULL,
  `anio` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_catedra` (`catedra_id` ASC) ,
  CONSTRAINT `fk_materia_catedra`
    FOREIGN KEY (`catedra_id`)
    REFERENCES `consultas_db`.`catedra` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `consultas_db`.`persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`persona` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`persona` (
  `nombre` VARCHAR(32) NOT NULL,
  `apellido` VARCHAR(32) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `deleted_time` TIMESTAMP NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id` INT NOT NULL AUTO_INCREMENT,
  `legajo` VARCHAR(45) NULL,
  `docente` TINYINT NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `consultas_db`.`consulta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`consulta` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`consulta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `docente_id` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `materia_id` INT NOT NULL,
  `fecha` DATETIME NOT NULL,
  `descripcion_baja` VARCHAR(255) NULL,
  `fecha_baja` TIMESTAMP NULL,
  `consulta_reemplazo_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_materia` (`materia_id` ASC) ,
  INDEX `fk_docente` (`docente_id` ASC) ,
  INDEX `fk_consulta_reemplazo_idx` (`consulta_reemplazo_id` ASC) ,
  CONSTRAINT `fk_consulta_materia`
    FOREIGN KEY (`materia_id`)
    REFERENCES `consultas_db`.`materia` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consulta_docente`
    FOREIGN KEY (`docente_id`)
    REFERENCES `consultas_db`.`persona` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consulta_reemplazo`
    FOREIGN KEY (`consulta_reemplazo_id`)
    REFERENCES `consultas_db`.`consulta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `consultas_db`.`estado_consulta_estado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`estado_consulta_estado` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`estado_consulta_estado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `estado_consulta_id` INT NOT NULL,
  `consulta_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_consulta` (`consulta_id` ASC) ,
  INDEX `fk_estado_consulta` (`estado_consulta_id` ASC) ,
  CONSTRAINT `fk_estado_consulta`
    FOREIGN KEY (`estado_consulta_id`)
    REFERENCES `consultas_db`.`estado_consulta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estado_consulta_consulta`
    FOREIGN KEY (`consulta_id`)
    REFERENCES `consultas_db`.`consulta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `consultas_db`.`solicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`solicitud` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`solicitud` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `persona_id` INT NOT NULL,
  `consulta_id` INT NOT NULL,
  `aprobada` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_persona` (`persona_id` ASC) ,
  INDEX `fk_consula` (`consulta_id` ASC) ,
  CONSTRAINT `fk_solicitud_consulta`
    FOREIGN KEY (`consulta_id`)
    REFERENCES `consultas_db`.`consulta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_persona`
    FOREIGN KEY (`persona_id`)
    REFERENCES `consultas_db`.`persona` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `consultas_db`.`materia_docente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consultas_db`.`materia_docente` ;

CREATE TABLE IF NOT EXISTS `consultas_db`.`materia_docente` (
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `delete_time` TIMESTAMP NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `materia_id` INT NOT NULL,
  `docente_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_docente` (`docente_id` ASC) ,
  INDEX `fk_materia` (`materia_id` ASC) ,
  CONSTRAINT `fk_materia_docente_docente`
    FOREIGN KEY (`docente_id`)
    REFERENCES `consultas_db`.`persona` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materia_docente_materia`
    FOREIGN KEY (`materia_id`)
    REFERENCES `consultas_db`.`materia` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

USE `consultas_db` ;

-- -----------------------------------------------------
-- procedure queryConsulta
-- -----------------------------------------------------

USE `consultas_db`;
DROP procedure IF EXISTS `consultas_db`.`queryConsulta`;

DELIMITER $$
USE `consultas_db`$$
CREATE PROCEDURE `queryConsulta`(IN materiaId INT ,IN docenteId INT,IN estadoId INT )
BEGIN
 SELECT
 CONSULTA.id as "id",
 ESTADO_CONSULTA.codigo as "estado",
 MATERIA.nombre as "materia",
 PERSONA.nombre as "docente_nombre",
 PERSONA.id as "docente_id",
 CONSULTA.fecha as "horario"
 FROM CONSULTA
 INNER JOIN PERSONA
 ON CONSULTA.docente_id = PERSONA.id
 INNER JOIN MATERIA
 ON CONSULTA.materia_id = MATERIA.id
 INNER JOIN ESTADO_CONSULTA_ESTADO
 ON CONSULTA.id = ESTADO_CONSULTA_ESTADO.consulta_id
  INNER JOIN ESTADO_CONSULTA
 ON ESTADO_CONSULTA.id = ESTADO_CONSULTA_ESTADO.estado_consulta_id
 WHERE   (  materia_id = IFNULL(materiaId,materia_id) )
 AND     (  docente_id = IFNULL(docenteId,docente_id) )
 AND     (  estado_consulta_id = IFNULL(estadoId,estado_consulta_id) ); 
END$$

DELIMITER ;
USE `consultas_db`;

DELIMITER $$

USE `consultas_db`$$
DROP TRIGGER IF EXISTS `consultas_db`.`solicitud_AFTER_INSERT` $$
USE `consultas_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `consultas_db`.`solicitud_AFTER_INSERT` AFTER INSERT ON `solicitud` FOR EACH ROW
BEGIN
UPDATE consulta 
SET consulta.cupo = consulta.cupo - 1
WHERE consulta.id = NEW.consulta_id;
END$$


USE `consultas_db`$$
DROP TRIGGER IF EXISTS `consultas_db`.`solicitud_AFTER_DELETE` $$
USE `consultas_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `consultas_db`.`solicitud_AFTER_DELETE` AFTER DELETE ON `solicitud` FOR EACH ROW
BEGIN
UPDATE consulta 
SET consulta.cupo = consulta.cupo + 1
WHERE consulta.id = OLD.consulta_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
